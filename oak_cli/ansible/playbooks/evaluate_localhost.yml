- name: Evaluate the local host metrics.
  hosts: localhost
  #become: yes
  #vars:
  #   oak: /home/alex/miniconda3/envs/alex/bin/oak
    #ansible_user: alex
  tasks:
    #- command: "{{oak}} c local-machine-purpose configure everything"
    #- command: "{{oak}} a s"
    #- command: "which {{ oak }}"
    #- command: "which oak"
    #- command:
        #cmd: "pip install ."
        #chdir: "../../../"


    #- command: "conda info --envs"
    #- command: "whoami"

    # - name: Update apt cache
    #   ansible.builtin.apt:
    #     update_cache: yes

    - name: Install python3-venv
      ansible.builtin.apt:
        name: python3-venv
        state: present

    - name: Create Python virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /tmp/oak-ansible
      args:
        creates: "/tmp/oak-ansible"

    - name: Check if OAK-CLI is already installed.
      ansible.builtin.shell:
        cmd: /tmp/oak-ansible/bin/python -m pip show oak-cli
        chdir: "../../../"
      ignore_errors: true
      register: oak_cli_pip_show

    - name: Install OAK-CLI
      ansible.builtin.command:
        cmd: /tmp/oak-ansible/bin/python -m pip install .
        chdir: "../../../"
      when: oak_cli_pip_show.rc != 0

    # - command: "python3 -m venv /tmp/oak_ansible_venv"
    # - command: "source /tmp/oak_ansible_venv/bin/activate"
    # - command:
    #     cmd: "pip install ."
    #     chdir: "../../../"

    #- command: which oak
    - command: /tmp/oak-ansible/bin/python -m oak_cli.main a s
    #- command: whoami
      register: lel
      # become: true <- IMPORTANT: For what ever reason - when using become - OAK-CLI login even fails ....
    - debug: var=lel.stdout

    #- command: "/usr/bin/whoami; /usr/bin/id"
    # - command: "/usr/bin/id"
    #   register: lel
    # - debug: var=lel.stdout
  # roles:
  #   - evaluate_localhost
