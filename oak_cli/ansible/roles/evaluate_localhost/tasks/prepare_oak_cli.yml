# NOTE: The following combination makes invoking OAK-CLI via ansible pretty tricky:
#- Custom python package (not from pip) - current OAK-CLI
#- Potential python venvs
#- The latests strict Debian/Ubuntu rules that prohibit installing packages via pip directly (only via venvs)
#- The invocation & use of ansible
#- Calling all this from via the CLI and not directly "ad-hoc"

- name: Install python3-venv
  ansible.builtin.apt:
    name: python3-venv
    state: present

- name: Create Python virtual environment
  ansible.builtin.command:
    cmd: "python3 -m venv {{ venv }}"
  args:
    creates: "{{ venv }}"

- name: Check if OAK-CLI is already installed.
  ansible.builtin.shell:
    cmd: "{{ venv_pip }} show oak-cli"
    # NOTE: This target dir has to be the root of the OAK-CLI project
    chdir: "../../../"
  ignore_errors: true
  register: oak_cli_pip_show

- name: Install OAK-CLI
  ansible.builtin.command:
    cmd: "{{ venv_python }} -m pip install -e ."
    chdir: "../../../"
  when: oak_cli_pip_show.rc != 0
